{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mgabr\\\\Desktop\\\\front-arcadis\\\\arcadis-challenge\\\\src\\\\components\\\\NewParam\\\\NewParamModal.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Modal, Form, Input, Select, message } from 'antd';\nimport React, { useState } from 'react';\nimport { createParam } from '../../Api';\nimport { validateParamData } from '../../helpers/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nconst NewParamModal = _ref => {\n  _s();\n\n  let {\n    id\n  } = _ref;\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [paramName, setParamName] = useState('');\n  const [paramDate, setParamDate] = useState('');\n  const [paramValue, setParamValue] = useState(0);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  let unity = '';\n\n  switch (paramName) {\n    case 'Escherichia coli':\n      unity = 'NMP/100ml';\n      break;\n\n    case 'DBO':\n      unity = 'mg O2/l';\n      break;\n\n    default:\n      unity = 'mg/l';\n  }\n\n  const paramNames = [{\n    \"name\": \"Aluminio dissolvido\",\n    \"value\": \"aluminioDissolvido\",\n    \"unity\": \"mg/l\"\n  }, {\n    \"name\": \"Arsênio total\",\n    \"value\": \"arsenioTotal\",\n    \"unity\": \"mg/l\"\n  }, {\n    \"name\": \"Chumbo total\",\n    \"value\": \"chumboTotal\",\n    \"unity\": \"mg/l\"\n  }, {\n    \"name\": \"Cobre dissolvido\",\n    \"value\": \"cobreDissolvido\"\n  }, {\n    \"name\": \"Escherichia coli\",\n    \"value\": \"escherichiaColi\"\n  }, {\n    \"name\": \"Cromo total\",\n    \"value\": \"cromoTotal\"\n  }, {\n    \"name\": \"Cádmio total\",\n    \"value\": \"cadmioTotal\"\n  }, {\n    \"name\": \"DBO\",\n    \"value\": \"dbo\"\n  }];\n\n  const onChange = value => {\n    setParamName(value);\n  };\n\n  const formatDate = new Date(paramDate).toLocaleDateString(\"en-GB\");\n\n  const handleOk = () => {\n    if (validateParamData(paramName, paramValue, paramDate)) {\n      createParam(id, paramName, paramValue, formatDate, unity);\n      setIsModalVisible(false);\n      message.success('Todos os campos devem ser preenchidos');\n      window.location.reload();\n    } else {\n      message.error('Todos os campos devem ser preenchidos');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: showModal,\n      children: \"Cadastrar novo parametro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Novo Paramentro\",\n      visible: isModalVisible,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        name: \"basic\",\n        labelCol: {\n          span: 8\n        },\n        wrapperCol: {\n          span: 16\n        },\n        initialValues: {\n          remember: true\n        },\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Nome\",\n          name: \"name\",\n          rules: [{\n            required: true,\n            message: 'Selecione o nome do parâmetro'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            showSearch: true,\n            optionFilterProp: \"children\",\n            onChange: onChange,\n            filterOption: (input, option) => option.children.toLowerCase().includes(input.toLowerCase()),\n            children: paramNames.map(param => /*#__PURE__*/_jsxDEV(Option, {\n              value: param.name,\n              children: param.name\n            }, param.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Valor\",\n          name: \"value\",\n          rules: [{\n            required: true,\n            message: 'Insira um valor válido'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: paramValue,\n            disabled: !paramName,\n            placeholder: unity,\n            onBlur: event => setParamValue(parseFloat(event.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Data de coleta\",\n          rules: [{\n            required: true,\n            message: 'Selecione uma data válida'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: 'date',\n            onBlur: event => setParamDate(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NewParamModal, \"LKMTYQPPSF2t2oeTVEsj/CUn4fg=\");\n\n_c = NewParamModal;\nexport default NewParamModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewParamModal\");","map":{"version":3,"names":["Button","Modal","Form","Input","Select","message","React","useState","createParam","validateParamData","Option","NewParamModal","id","isModalVisible","setIsModalVisible","paramName","setParamName","paramDate","setParamDate","paramValue","setParamValue","showModal","handleCancel","unity","paramNames","onChange","value","formatDate","Date","toLocaleDateString","handleOk","success","window","location","reload","error","span","remember","required","input","option","children","toLowerCase","includes","map","param","name","event","parseFloat","target"],"sources":["C:/Users/mgabr/Desktop/front-arcadis/arcadis-challenge/src/components/NewParam/NewParamModal.tsx"],"sourcesContent":["import { Button, Modal, Form, Input, Select, message } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport { createParam } from '../../Api';\r\nimport { validateParamData } from '../../helpers/helpers';\r\nconst { Option } = Select;\r\n\r\nconst NewParamModal: React.FC<{id: string}> = ({id})  => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [paramName, setParamName] = useState('');\r\n  const [paramDate, setParamDate] = useState('');\r\n  const [paramValue, setParamValue] = useState(0);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  \r\n  let unity = '';\r\n  \r\n  switch(paramName){\r\n    case 'Escherichia coli':\r\n      unity = 'NMP/100ml'\r\n      break;\r\n    case 'DBO':\r\n      unity = 'mg O2/l'\r\n      break;\r\n    default:\r\n      unity = 'mg/l'\r\n  }\r\n\r\n  const paramNames = [\r\n    {\r\n    \"name\": \"Aluminio dissolvido\",\r\n    \"value\": \"aluminioDissolvido\",\r\n    \"unity\": \"mg/l\"\r\n   },\r\n   {\r\n    \"name\":\"Arsênio total\",\r\n    \"value\":\"arsenioTotal\",\r\n    \"unity\": \"mg/l\"\r\n   },\r\n   {\r\n    \"name\":\"Chumbo total\",\r\n    \"value\":\"chumboTotal\",\r\n    \"unity\": \"mg/l\"\r\n   },\r\n   {\r\n    \"name\":\"Cobre dissolvido\",\r\n    \"value\":\"cobreDissolvido\"\r\n   },\r\n   {\r\n    \"name\":\"Escherichia coli\",\r\n    \"value\":\"escherichiaColi\"\r\n   },\r\n   {\r\n    \"name\":\"Cromo total\",\r\n    \"value\":\"cromoTotal\"\r\n   },\r\n   {\r\n    \"name\":\"Cádmio total\",\r\n    \"value\":\"cadmioTotal\"\r\n   },\r\n   {\r\n    \"name\":\"DBO\",\r\n    \"value\":\"dbo\"\r\n   }\r\n]\r\n\r\nconst onChange = (value: string) => {\r\n  setParamName(value)\r\n};\r\n\r\nconst formatDate = new Date(paramDate).toLocaleDateString(\"en-GB\")\r\n\r\nconst handleOk = () => {\r\n  if(validateParamData(paramName, paramValue, paramDate)){\r\n    createParam(id, paramName, paramValue, formatDate, unity)\r\n    setIsModalVisible(false);\r\n    message.success('Todos os campos devem ser preenchidos') ;\r\n\r\n    window.location.reload();\r\n  } else {\r\n    message.error('Todos os campos devem ser preenchidos') ;\r\n  }\r\n\r\n};\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        Cadastrar novo parametro\r\n      </Button>\r\n      <Modal title=\"Novo Paramentro\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n        <Form\r\n        name=\"basic\"\r\n        labelCol={{ span: 8 }}\r\n        wrapperCol={{ span: 16 }}\r\n        initialValues={{ remember: true }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.Item\r\n          label=\"Nome\"\r\n          name=\"name\"\r\n          rules={[{ required: true, message: 'Selecione o nome do parâmetro' }]}\r\n        >\r\n          <Select\r\n            showSearch\r\n            optionFilterProp=\"children\"\r\n            onChange={onChange}\r\n            filterOption={(input, option) =>\r\n              (option!.children as unknown as string).toLowerCase().includes(input.toLowerCase())\r\n            }\r\n          >\r\n            {paramNames.map((param) => \r\n              <Option  key={param.value} value={param.name}>{param.name}</Option>\r\n            )}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Valor\"\r\n          name=\"value\"\r\n          rules={[{ required: true, message: 'Insira um valor válido' }]}\r\n        >\r\n          <Input value={paramValue} disabled={!paramName} placeholder={unity} onBlur={(event) => setParamValue(parseFloat(event.target.value))}/>\r\n        </Form.Item>\r\n        <Form.Item \r\n        label=\"Data de coleta\"\r\n        rules={[{ required: true, message: 'Selecione uma data válida' }]}\r\n        >\r\n            <Input type={'date'} onBlur={(event) => setParamDate((event.target.value))}/>\r\n          </Form.Item>\r\n      </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewParamModal;"],"mappings":"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"},"metadata":{},"sourceType":"module"}