{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mgabr\\\\Desktop\\\\front-arcadis\\\\arcadis-challenge\\\\src\\\\components\\\\NewParam\\\\NewParamForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { Form, Input, DatePicker, Select } from 'antd';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewParamForm = _ref => {\n  _s();\n\n  let {\n    created\n  } = _ref;\n  const [nameSelected, setNameSelected] = useState(false);\n\n  const onFinish = values => {\n    console.log('Success:', values);\n  };\n\n  const paramNames = [{\n    \"name\": \"Aluminio dissolvido\",\n    \"value\": \"aluminioDissolvido\",\n    \"unity\": \"mg/l\"\n  }, {\n    \"name\": \"Arsênio total\",\n    \"value\": \"arsenioTotal\",\n    \"unity\": \"mg/l\"\n  }, {\n    \"name\": \"Chumbo total\",\n    \"value\": \"chumboTotal\",\n    \"unity\": \"mg/l\"\n  }, {\n    \"name\": \"Cobre dissolvido\",\n    \"value\": \"cobreDissolvido\"\n  }, {\n    \"name\": \"Escherichia coli\",\n    \"value\": \"escherichiaColi\"\n  }, {\n    \"name\": \"Cromo total\",\n    \"value\": \"cromoTotal\"\n  }, {\n    \"name\": \"Cádmio total\",\n    \"value\": \"cadmioTotal\"\n  }, {\n    \"name\": \"DBO\",\n    \"value\": \"dbo\"\n  }];\n  let Unity;\n\n  (function (Unity) {\n    Unity[\"aluminioDissolvido\"] = \"mg/l\";\n  })(Unity || (Unity = {}));\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  console.log(nameSelected);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: paramNames.map(item => /*#__PURE__*/_jsxDEV(Form, {\n      name: \"basic\",\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 16\n      },\n      initialValues: {\n        remember: true\n      },\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Nome\",\n        name: \"name\",\n        rules: [{\n          required: true,\n          message: 'Selecione o nome do parâmetro'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n            onClick: () => setNameSelected(true),\n            value: param.value,\n            children: param.name\n          }, param.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this), \")}\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Valor\",\n        name: \"value\",\n        rules: [{\n          required: true,\n          message: 'Insira um valor válido'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          disabled: !nameSelected,\n          placeholder: Unity.aluminioDissolvido\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Data de coleta\",\n        rules: [{\n          required: true,\n          message: 'Selecione uma data válida'\n        }],\n        children: /*#__PURE__*/_jsxDEV(DatePicker, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this))\n  }, void 0, false);\n};\n\n_s(NewParamForm, \"iye2thzJL2kGfDXgPrUWjGhmVV8=\");\n\n_c = NewParamForm;\nexport default NewParamForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewParamForm\");","map":{"version":3,"names":["Form","Input","DatePicker","Select","React","useState","NewParamForm","created","nameSelected","setNameSelected","onFinish","values","console","log","paramNames","Unity","onFinishFailed","errorInfo","map","item","span","remember","required","message","param","value","name","aluminioDissolvido"],"sources":["C:/Users/mgabr/Desktop/front-arcadis/arcadis-challenge/src/components/NewParam/NewParamForm.tsx"],"sourcesContent":["import { Button, Checkbox, Form, Input, DatePicker, Select } from 'antd';\r\nimport React, { Dispatch, SetStateAction, useState } from 'react';\r\n\r\ntype NewParamFormProp  = {\r\n  created: boolean\r\n};\r\n\r\nconst NewParamForm =  ({created}: NewParamFormProp): JSX.Element  => {\r\n  const [nameSelected, setNameSelected] = useState(false);  \r\n  const onFinish = (values: any) => {\r\n    console.log('Success:', values);\r\n  };\r\n\r\n  const paramNames = [\r\n    {\r\n    \"name\": \"Aluminio dissolvido\",\r\n    \"value\": \"aluminioDissolvido\",\r\n    \"unity\": \"mg/l\"\r\n   },\r\n   {\r\n    \"name\":\"Arsênio total\",\r\n    \"value\":\"arsenioTotal\",\r\n    \"unity\": \"mg/l\"\r\n   },\r\n   {\r\n    \"name\":\"Chumbo total\",\r\n    \"value\":\"chumboTotal\",\r\n    \"unity\": \"mg/l\"\r\n   },\r\n   {\r\n    \"name\":\"Cobre dissolvido\",\r\n    \"value\":\"cobreDissolvido\"\r\n   },\r\n   {\r\n    \"name\":\"Escherichia coli\",\r\n    \"value\":\"escherichiaColi\"\r\n   },\r\n   {\r\n    \"name\":\"Cromo total\",\r\n    \"value\":\"cromoTotal\"\r\n   },\r\n   {\r\n    \"name\":\"Cádmio total\",\r\n    \"value\":\"cadmioTotal\"\r\n   },\r\n   {\r\n    \"name\":\"DBO\",\r\n    \"value\":\"dbo\"\r\n   }\r\n]\r\n\r\n  enum Unity {\r\n      \"aluminioDissolvido\" = 'mg/l'\r\n      // \"arsenioTotal\"\r\n      // \"chumboTotal\"\r\n      // \"cobreDissolvido\"\r\n      // \"escherichiaColi\"\r\n      // \"cromoTotal\"\r\n      // \"cadmioTotal\"\r\n      // \"dbo\"\r\n  }\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  console.log(nameSelected);\r\n\r\n  return (\r\n    <>\r\n     {paramNames.map((item) => \r\n      <Form\r\n      name=\"basic\"\r\n      labelCol={{ span: 8 }}\r\n      wrapperCol={{ span: 16 }}\r\n      initialValues={{ remember: true }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n      autoComplete=\"off\"\r\n    >\r\n      <Form.Item\r\n        label=\"Nome\"\r\n        name=\"name\"\r\n        rules={[{ required: true, message: 'Selecione o nome do parâmetro' }]}\r\n      >\r\n        <Select>\r\n          <Select.Option onClick={() => setNameSelected(true)} key={param.value} value={param.value}>{param.name}</Select.Option>)}\r\n        </Select>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Valor\"\r\n        name=\"value\"\r\n        rules={[{ required: true, message: 'Insira um valor válido' }]}\r\n      >\r\n        <Input disabled={!nameSelected} placeholder={Unity.aluminioDissolvido}/>\r\n      </Form.Item>\r\n      <Form.Item \r\n      label=\"Data de coleta\"\r\n      rules={[{ required: true, message: 'Selecione uma data válida' }]}\r\n      >\r\n          <DatePicker />\r\n        </Form.Item>\r\n    </Form>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewParamForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}