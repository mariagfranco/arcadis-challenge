{"ast":null,"code":"const axios = require('axios');\n\nconst api = axios.create({\n  baseURL: \"http://localhost:1800\"\n});\n\nconst getOi = async () => {\n  try {\n    const {\n      data,\n      status\n    } = api.get('/point');\n\n    if (data) {\n      return {\n        data\n      };\n    }\n\n    return new Error('n sei', status);\n  } catch (error) {\n    return new Error('erro de cu');\n  }\n};\n\nexport const Service = {\n  getOi\n};\nexport function createSpot(spotName, coordX, coordY) {\n  axios.post('http://localhost:1800/point', {\n    \"name\": spotName,\n    \"coords\": {\n      \"coordX\": coordX,\n      \"coordY\": coordY\n    }\n  });\n}\nexport function createParam(spotId, paramName, value, date) {\n  axios.post('http://localhost:1800/param', {\n    \"spotId\": spotId,\n    \"name\": paramName,\n    \"value\": value,\n    \"date\": date\n  });\n}\nexport function getParamBySpotId(spotId) {\n  axios.get(`http://localhost:1800/param/{spotId}`);\n}","map":{"version":3,"names":["axios","require","api","create","baseURL","getOi","data","status","get","Error","error","Service","createSpot","spotName","coordX","coordY","post","createParam","spotId","paramName","value","date","getParamBySpotId"],"sources":["C:/Users/mgabr/Desktop/front-arcadis/arcadis-challenge/src/Api.tsx"],"sourcesContent":["const axios =  require('axios');\r\nconst api = axios.create({\r\n    baseURL: \"http://localhost:1800\"\r\n});\r\n\r\ninterface getSpots {\r\n    data: spot[]\r\n}\r\n\r\ninterface spot {\r\n    coords: {\r\n        coordX: number,\r\n        coordY: number\r\n    },\r\n    _id: string,\r\n    name: string,\r\n    __v: number\r\n}\r\n\r\nconst getOi = async (): Promise<getSpots | Error> => {\r\n    try {\r\n        const { data, status } = api.get('/point');\r\n        if(data){\r\n            return {\r\n                data\r\n            }\r\n        }\r\n\r\n        return new Error('n sei', status)\r\n        \r\n    } catch (error) {\r\n        return new Error('erro de cu')\r\n    }\r\n}\r\n\r\nexport const Service = {\r\n    getOi,\r\n}\r\n\r\nexport function createSpot(spotName: string, coordX: number, coordY: number) {\r\n    axios\r\n      .post('http://localhost:1800/point', {\r\n        \"name\": spotName,\r\n        \"coords\": {\r\n            \"coordX\": coordX,\r\n            \"coordY\": coordY\r\n        }\r\n    })\r\n  }\r\n\r\n  export function createParam(spotId: string, paramName: string, value: number, date: Date) {\r\n    axios\r\n    .post('http://localhost:1800/param', {\r\n      \"spotId\": spotId,\r\n      \"name\": paramName,\r\n      \"value\": value,\r\n      \"date\": date\r\n  })\r\n}\r\n\r\nexport function getParamBySpotId(spotId: string){\r\n    axios.get(`http://localhost:1800/param/{spotId}`)\r\n}\r\n\r\n"],"mappings":"AAAA,MAAMA,KAAK,GAAIC,OAAO,CAAC,OAAD,CAAtB;;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAN,CAAa;EACrBC,OAAO,EAAE;AADY,CAAb,CAAZ;;AAkBA,MAAMC,KAAK,GAAG,YAAuC;EACjD,IAAI;IACA,MAAM;MAAEC,IAAF;MAAQC;IAAR,IAAmBL,GAAG,CAACM,GAAJ,CAAQ,QAAR,CAAzB;;IACA,IAAGF,IAAH,EAAQ;MACJ,OAAO;QACHA;MADG,CAAP;IAGH;;IAED,OAAO,IAAIG,KAAJ,CAAU,OAAV,EAAmBF,MAAnB,CAAP;EAEH,CAVD,CAUE,OAAOG,KAAP,EAAc;IACZ,OAAO,IAAID,KAAJ,CAAU,YAAV,CAAP;EACH;AACJ,CAdD;;AAgBA,OAAO,MAAME,OAAO,GAAG;EACnBN;AADmB,CAAhB;AAIP,OAAO,SAASO,UAAT,CAAoBC,QAApB,EAAsCC,MAAtC,EAAsDC,MAAtD,EAAsE;EACzEf,KAAK,CACFgB,IADH,CACQ,6BADR,EACuC;IACnC,QAAQH,QAD2B;IAEnC,UAAU;MACN,UAAUC,MADJ;MAEN,UAAUC;IAFJ;EAFyB,CADvC;AAQD;AAED,OAAO,SAASE,WAAT,CAAqBC,MAArB,EAAqCC,SAArC,EAAwDC,KAAxD,EAAuEC,IAAvE,EAAmF;EACxFrB,KAAK,CACJgB,IADD,CACM,6BADN,EACqC;IACnC,UAAUE,MADyB;IAEnC,QAAQC,SAF2B;IAGnC,SAASC,KAH0B;IAInC,QAAQC;EAJ2B,CADrC;AAOH;AAED,OAAO,SAASC,gBAAT,CAA0BJ,MAA1B,EAAyC;EAC5ClB,KAAK,CAACQ,GAAN,CAAW,sCAAX;AACH"},"metadata":{},"sourceType":"module"}