{"ast":null,"code":"const axios = require('axios');\n\nexport const api = axios.create({\n  baseURL: \"http://localhost:1800/\"\n});\nexport const getOi = async () => {\n  try {\n    const {\n      data\n    } = api.get('/');\n\n    if (data) {\n      return {\n        data\n      };\n    }\n\n    return new Error('erro');\n  } catch (error) {\n    return new Error('erro de cu');\n  }\n};","map":{"version":3,"names":["axios","require","api","create","baseURL","getOi","data","get","Error","error"],"sources":["C:/Users/mgabr/Desktop/front-arcadis/arcadis-challenge/src/Api.tsx"],"sourcesContent":["const axios =  require('axios');\r\nexport const api = axios.create({\r\n    baseURL: \"http://localhost:1800/\"\r\n});\r\n\r\ninterface getSpots {\r\n    data: spot[]\r\n}\r\n\r\ninterface spot {\r\n    coords: {\r\n        coordX: number,\r\n        coordY: number\r\n    },\r\n    id: string,\r\n    name: string,\r\n}\r\n\r\ninterface oi {\r\n    message: string\r\n}\r\n\r\n\r\n\r\nexport const getOi = async (): Promise<oi | Error> => {\r\n    try {\r\n        const { data } = api.get('/');\r\n        if(data){\r\n            return {\r\n                data\r\n            }\r\n        }\r\n\r\n        return new Error('erro')\r\n    } catch (error) {\r\n        return new Error('erro de cu')\r\n    }\r\n}\r\n"],"mappings":"AAAA,MAAMA,KAAK,GAAIC,OAAO,CAAC,OAAD,CAAtB;;AACA,OAAO,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAN,CAAa;EAC5BC,OAAO,EAAE;AADmB,CAAb,CAAZ;AAuBP,OAAO,MAAMC,KAAK,GAAG,YAAiC;EAClD,IAAI;IACA,MAAM;MAAEC;IAAF,IAAWJ,GAAG,CAACK,GAAJ,CAAQ,GAAR,CAAjB;;IACA,IAAGD,IAAH,EAAQ;MACJ,OAAO;QACHA;MADG,CAAP;IAGH;;IAED,OAAO,IAAIE,KAAJ,CAAU,MAAV,CAAP;EACH,CATD,CASE,OAAOC,KAAP,EAAc;IACZ,OAAO,IAAID,KAAJ,CAAU,YAAV,CAAP;EACH;AACJ,CAbM"},"metadata":{},"sourceType":"module"}