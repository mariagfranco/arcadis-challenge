{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mgabr\\\\Desktop\\\\front-arcadis\\\\arcadis-challenge\\\\src\\\\components\\\\NewParam\\\\NewParamModal.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Modal, Form, Input, DatePicker, Select } from 'antd';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewParamModal = () => {\n  _s();\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [date, setDate] = useState();\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const [nameSelected, setNameSelected] = useState('');\n\n  const onFinish = values => {\n    console.log('Success:', values);\n  };\n\n  const paramNames = [{\n    \"name\": \"Aluminio dissolvido\",\n    \"value\": \"aluminioDissolvido\",\n    \"unity\": \"mg/l\"\n  }, {\n    \"name\": \"Arsênio total\",\n    \"value\": \"arsenioTotal\",\n    \"unity\": \"mg/l\"\n  }, {\n    \"name\": \"Chumbo total\",\n    \"value\": \"chumboTotal\",\n    \"unity\": \"mg/l\"\n  }, {\n    \"name\": \"Cobre dissolvido\",\n    \"value\": \"cobreDissolvido\"\n  }, {\n    \"name\": \"Escherichia coli\",\n    \"value\": \"escherichiaColi\"\n  }, {\n    \"name\": \"Cromo total\",\n    \"value\": \"cromoTotal\"\n  }, {\n    \"name\": \"Cádmio total\",\n    \"value\": \"cadmioTotal\"\n  }, {\n    \"name\": \"DBO\",\n    \"value\": \"dbo\"\n  }];\n  let Unity;\n\n  (function (Unity) {\n    Unity[\"aluminioDissolvido\"] = \"mg/l\";\n  })(Unity || (Unity = {}));\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  console.log(date);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: showModal,\n      children: \"Cadastrar novo parametro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Novo Paramentro\",\n      visible: isModalVisible,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        name: \"basic\",\n        labelCol: {\n          span: 8\n        },\n        wrapperCol: {\n          span: 16\n        },\n        initialValues: {\n          remember: true\n        },\n        onFinish: onFinish,\n        onFinishFailed: onFinishFailed,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Nome\",\n          name: \"name\",\n          rules: [{\n            required: true,\n            message: 'Selecione o nome do parâmetro'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            onSelect: (event => setNameSelected(event.target.val), set),\n            children: paramNames.map(param => /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: param.value,\n              children: param.name\n            }, param.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 40\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Valor\",\n          name: \"value\",\n          rules: [{\n            required: true,\n            message: 'Insira um valor válido'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            disabled: !nameSelected,\n            placeholder: Unity.aluminioDissolvido\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Data de coleta\",\n          rules: [{\n            required: true,\n            message: 'Selecione uma data válida'\n          }],\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            value: date,\n            onBlur: event => setDate(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NewParamModal, \"f8Ob0vWGv35psCmQN/RuWhqctaM=\");\n\n_c = NewParamModal;\nexport default NewParamModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewParamModal\");","map":{"version":3,"names":["Button","Modal","Form","Input","DatePicker","Select","React","useState","NewParamModal","isModalVisible","setIsModalVisible","date","setDate","showModal","handleOk","handleCancel","nameSelected","setNameSelected","onFinish","values","console","log","paramNames","Unity","onFinishFailed","errorInfo","span","remember","required","message","event","target","val","set","map","param","value","name","aluminioDissolvido"],"sources":["C:/Users/mgabr/Desktop/front-arcadis/arcadis-challenge/src/components/NewParam/NewParamModal.tsx"],"sourcesContent":["import { Button, Modal, Form, Input, DatePicker, Select } from 'antd';\r\nimport React, { useState } from 'react';\r\n\r\nconst NewParamModal: React.FC = () => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [date, setDate] = useState();\r\n\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const [nameSelected, setNameSelected] = useState('');  \r\n  const onFinish = (values: any) => {\r\n    console.log('Success:', values);\r\n  };\r\n\r\n  const paramNames = [\r\n    {\r\n    \"name\": \"Aluminio dissolvido\",\r\n    \"value\": \"aluminioDissolvido\",\r\n    \"unity\": \"mg/l\"\r\n   },\r\n   {\r\n    \"name\":\"Arsênio total\",\r\n    \"value\":\"arsenioTotal\",\r\n    \"unity\": \"mg/l\"\r\n   },\r\n   {\r\n    \"name\":\"Chumbo total\",\r\n    \"value\":\"chumboTotal\",\r\n    \"unity\": \"mg/l\"\r\n   },\r\n   {\r\n    \"name\":\"Cobre dissolvido\",\r\n    \"value\":\"cobreDissolvido\"\r\n   },\r\n   {\r\n    \"name\":\"Escherichia coli\",\r\n    \"value\":\"escherichiaColi\"\r\n   },\r\n   {\r\n    \"name\":\"Cromo total\",\r\n    \"value\":\"cromoTotal\"\r\n   },\r\n   {\r\n    \"name\":\"Cádmio total\",\r\n    \"value\":\"cadmioTotal\"\r\n   },\r\n   {\r\n    \"name\":\"DBO\",\r\n    \"value\":\"dbo\"\r\n   }\r\n]\r\n\r\n  enum Unity {\r\n      \"aluminioDissolvido\" = 'mg/l'\r\n      // \"arsenioTotal\"\r\n      // \"chumboTotal\"\r\n      // \"cobreDissolvido\"\r\n      // \"escherichiaColi\"\r\n      // \"cromoTotal\"\r\n      // \"cadmioTotal\"\r\n      // \"dbo\"\r\n  }\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  console.log(date)\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        Cadastrar novo parametro\r\n      </Button>\r\n      <Modal title=\"Novo Paramentro\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n        <Form\r\n        name=\"basic\"\r\n        labelCol={{ span: 8 }}\r\n        wrapperCol={{ span: 16 }}\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.Item\r\n          label=\"Nome\"\r\n          name=\"name\"\r\n          rules={[{ required: true, message: 'Selecione o nome do parâmetro' }]}\r\n        >\r\n          <Select onSelect={(event) => setNameSelected(event.target.val), set}>\r\n            {paramNames.map((param) => <Select.Option  key={param.value} value={param.value}>{param.name}</Select.Option>)}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Valor\"\r\n          name=\"value\"\r\n          rules={[{ required: true, message: 'Insira um valor válido' }]}\r\n        >\r\n          <Input disabled={!nameSelected} placeholder={Unity.aluminioDissolvido}/>\r\n        </Form.Item>\r\n        <Form.Item \r\n        label=\"Data de coleta\"\r\n        rules={[{ required: true, message: 'Selecione uma data válida' }]}\r\n        >\r\n            <DatePicker value={date} onBlur={(event) => setDate(event.target.value)}/>\r\n          </Form.Item>\r\n      </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewParamModal;"],"mappings":"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"},"metadata":{},"sourceType":"module"}