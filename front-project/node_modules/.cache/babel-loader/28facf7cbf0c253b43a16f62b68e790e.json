{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mgabr\\\\Desktop\\\\front-arcadis\\\\arcadis-challenge\\\\src\\\\components\\\\Spots\\\\SpotCard.tsx\",\n    _s = $RefreshSig$();\n\nimport { Collapse } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nconst {\n  Panel\n} = Collapse;\nconst columns = [{\n  title: 'Nome',\n  dataIndex: 'name',\n  key: 'name'\n}, {\n  title: 'Valor',\n  dataIndex: 'value',\n  key: 'value'\n}, {\n  title: 'Data da coleta',\n  dataIndex: 'date',\n  key: 'date'\n}, {\n  title: 'Limite',\n  dataIndex: 'limite',\n  key: 'limite'\n}];\nconst data = [{\n  key: '1',\n  name: 'Cobre dissolvido',\n  value: 32,\n  date: '23/01/2022',\n  limite: 'Viola'\n}, {\n  key: '2',\n  name: 'Chumbo total',\n  value: 25,\n  date: '23/01/2022',\n  limite: 'Cumpre'\n}];\n\nconst SpotCard = () => {\n  _s();\n\n  const [spots, setSpots] = useState([{\n    coords: {\n      coordX: 2,\n      coordY: 2\n    },\n    _id: 'string',\n    name: 'string'\n  }]);\n  useEffect(() => {\n    axios.get(\"http://localhost:1800/point\").then(res => setSpots(res.data));\n  }, []);\n  console.log(spots);\n  if (!spots) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"vazio\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: spots.map(spot => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: spot.coords\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 26\n    }, this))\n  }, void 0, false) // <Collapse  style={{backgroundColor: 'white'}}>\n  //   <Panel header=\"Nome do ponto\" key=\"1\" style={{margin: 20, backgroundColor: '#e8e8e8'}}>\n  //     <div style={{display: 'flex', flexDirection: 'row'}}>\n  //     <Card title='Coordenada X' style={{width: '50%'}}>\n  //       <p>234,65</p>\n  //    </Card>\n  //    <Card title='Coordenada Y'  style={{width: '50%'}}>\n  //       <p>234,65</p>\n  //    </Card>\n  //     </div>\n  //     <br></br>\n  //     <Table columns={columns} dataSource={data} />\n  //     <NewParamModal/>\n  //   </Panel>\n  // </Collapse>\n  ;\n};\n\n_s(SpotCard, \"AIIM4c4il3UCv6JOyM0vTt6+vTY=\");\n\n_c = SpotCard;\nexport default SpotCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpotCard\");","map":{"version":3,"names":["Collapse","React","useEffect","useState","axios","require","Panel","columns","title","dataIndex","key","data","name","value","date","limite","SpotCard","spots","setSpots","coords","coordX","coordY","_id","get","then","res","console","log","map","spot"],"sources":["C:/Users/mgabr/Desktop/front-arcadis/arcadis-challenge/src/components/Spots/SpotCard.tsx"],"sourcesContent":["import { Collapse, Table, Card } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport NewParamModal from '../NewParam/NewParamModal';\r\nconst axios = require('axios');\r\n\r\nconst { Panel } = Collapse;\r\ninterface getSpots {\r\n  data: spot[]\r\n}\r\n\r\ninterface spot {\r\n  coords: {\r\n      coordX: number,\r\n      coordY: number\r\n  },\r\n  _id: string,\r\n  name: string,\r\n}\r\n\r\nconst columns =  [\r\n  {\r\n    title: 'Nome',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n  },\r\n  {\r\n    title: 'Valor',\r\n    dataIndex: 'value',\r\n    key: 'value',\r\n  },\r\n  {\r\n    title: 'Data da coleta',\r\n    dataIndex: 'date',\r\n    key: 'date',\r\n  },\r\n  {\r\n    title: 'Limite',\r\n    dataIndex: 'limite',\r\n    key: 'limite',\r\n  },\r\n];\r\n\r\nconst data = [\r\n  {\r\n    key: '1',\r\n    name: 'Cobre dissolvido',\r\n    value: 32,\r\n    date: '23/01/2022',\r\n    limite: 'Viola'\r\n  },\r\n  {\r\n    key: '2',\r\n    name: 'Chumbo total',\r\n    value: 25,\r\n    date: '23/01/2022',\r\n    limite: 'Cumpre'\r\n  },\r\n]\r\n\r\nconst SpotCard: React.FC = () => {\r\n  const [spots, setSpots] = useState([{\r\n    coords: {\r\n        coordX: 2,\r\n        coordY: 2\r\n    },\r\n    _id: 'string',\r\n    name: 'string',\r\n  }]);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:1800/point\").then((res: getSpots) => setSpots(res.data))\r\n  }, [])\r\n\r\n  console.log(spots)\r\n  if (!spots) return (<p>vazio</p>)\r\n  return (\r\n    <>\r\n    {spots.map((spot) => <p>{spot.coords}</p>)}\r\n      {/* {spots.map((spot) => {\r\n         <Collapse  style={{backgroundColor: 'white'}}>\r\n         <Panel header={spot.name} key=\"1\" style={{margin: 20, backgroundColor: '#e8e8e8'}}>\r\n           <div style={{display: 'flex', flexDirection: 'row'}}>\r\n           <Card title='Coordenada X' style={{width: '50%'}}>\r\n             <p>234,65</p>\r\n          </Card>\r\n          <Card title='Coordenada Y'  style={{width: '50%'}}>\r\n             <p>234,65</p>\r\n          </Card>\r\n           </div>\r\n           <br></br>\r\n           <Table columns={columns} dataSource={data} />\r\n           <NewParamModal/>\r\n         </Panel>\r\n       </Collapse>\r\n      })} */}\r\n    </>\r\n  \r\n    // <Collapse  style={{backgroundColor: 'white'}}>\r\n    //   <Panel header=\"Nome do ponto\" key=\"1\" style={{margin: 20, backgroundColor: '#e8e8e8'}}>\r\n    //     <div style={{display: 'flex', flexDirection: 'row'}}>\r\n    //     <Card title='Coordenada X' style={{width: '50%'}}>\r\n    //       <p>234,65</p>\r\n    //    </Card>\r\n    //    <Card title='Coordenada Y'  style={{width: '50%'}}>\r\n    //       <p>234,65</p>\r\n    //    </Card>\r\n    //     </div>\r\n    //     <br></br>\r\n    //     <Table columns={columns} dataSource={data} />\r\n    //     <NewParamModal/>\r\n    //   </Panel>\r\n    // </Collapse>\r\n  );\r\n};\r\n\r\nexport default SpotCard;"],"mappings":";;;AAAA,SAASA,QAAT,QAAsC,MAAtC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAM;EAAEC;AAAF,IAAYN,QAAlB;AAcA,MAAMO,OAAO,GAAI,CACf;EACEC,KAAK,EAAE,MADT;EAEEC,SAAS,EAAE,MAFb;EAGEC,GAAG,EAAE;AAHP,CADe,EAMf;EACEF,KAAK,EAAE,OADT;EAEEC,SAAS,EAAE,OAFb;EAGEC,GAAG,EAAE;AAHP,CANe,EAWf;EACEF,KAAK,EAAE,gBADT;EAEEC,SAAS,EAAE,MAFb;EAGEC,GAAG,EAAE;AAHP,CAXe,EAgBf;EACEF,KAAK,EAAE,QADT;EAEEC,SAAS,EAAE,QAFb;EAGEC,GAAG,EAAE;AAHP,CAhBe,CAAjB;AAuBA,MAAMC,IAAI,GAAG,CACX;EACED,GAAG,EAAE,GADP;EAEEE,IAAI,EAAE,kBAFR;EAGEC,KAAK,EAAE,EAHT;EAIEC,IAAI,EAAE,YAJR;EAKEC,MAAM,EAAE;AALV,CADW,EAQX;EACEL,GAAG,EAAE,GADP;EAEEE,IAAI,EAAE,cAFR;EAGEC,KAAK,EAAE,EAHT;EAIEC,IAAI,EAAE,YAJR;EAKEC,MAAM,EAAE;AALV,CARW,CAAb;;AAiBA,MAAMC,QAAkB,GAAG,MAAM;EAAA;;EAC/B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,CAAC;IAClCgB,MAAM,EAAE;MACJC,MAAM,EAAE,CADJ;MAEJC,MAAM,EAAE;IAFJ,CAD0B;IAKlCC,GAAG,EAAE,QAL6B;IAMlCV,IAAI,EAAE;EAN4B,CAAD,CAAD,CAAlC;EASAV,SAAS,CAAC,MAAM;IACdE,KAAK,CAACmB,GAAN,CAAU,6BAAV,EAAyCC,IAAzC,CAA+CC,GAAD,IAAmBP,QAAQ,CAACO,GAAG,CAACd,IAAL,CAAzE;EACD,CAFQ,EAEN,EAFM,CAAT;EAIAe,OAAO,CAACC,GAAR,CAAYV,KAAZ;EACA,IAAI,CAACA,KAAL,EAAY,oBAAQ;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAR;EACZ,oBACE;IAAA,UACCA,KAAK,CAACW,GAAN,CAAWC,IAAD,iBAAU;MAAA,UAAIA,IAAI,CAACV;IAAT;MAAA;MAAA;MAAA;IAAA,QAApB;EADD,iBADF,CAsBE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EApCF;AAsCD,CAtDD;;GAAMH,Q;;KAAAA,Q;AAwDN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}