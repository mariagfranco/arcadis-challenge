{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mgabr\\\\Desktop\\\\front-arcadis\\\\arcadis-challenge\\\\src\\\\components\\\\NewSpot\\\\NewSpotModal.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Modal, Form, Input } from 'antd';\nimport React, { useState } from 'react';\nimport { createSpot } from '../../Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nconst NewSpotModal = () => {\n  _s();\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [spotName, setName] = useState('');\n  const [spotCoordX, setCoordX] = useState(0);\n  const [spotCoordY, setCoordY] = useState(0);\n  const [newSpotCreated, setNewSpotCreated] = useState(false);\n\n  const onFinish = values => {\n    console.log('Success:', values);\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n    createSpot(spotName, spotCoordX, spotCoordY);\n    setNewSpotCreated;\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"text\",\n      onClick: showModal,\n      style: {\n        borderColor: '#e8e8e8',\n        width: '50%'\n      },\n      children: \"Cadastre um novo ponto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Cadastrar novo ponto\",\n      visible: isModalVisible,\n      onOk: () => handleOk(),\n      onCancel: handleCancel,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        name: \"basic\",\n        labelCol: {\n          span: 8\n        },\n        wrapperCol: {\n          span: 16\n        },\n        initialValues: {\n          remember: true\n        },\n        onFinish: onFinish,\n        onFinishFailed: onFinishFailed,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Nome\",\n          name: \"name\",\n          rules: [{\n            required: true,\n            message: 'Please input your username!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: spotName,\n            onBlur: event => setName(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Coordenadas\",\n          rules: [{\n            required: true,\n            message: 'Please input your username!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Group, {\n            compact: true,\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"coordX\",\n              noStyle: true,\n              rules: [{\n                required: true,\n                message: 'Province is required'\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                value: spotCoordX,\n                onBlur: event => setCoordX(parseInt(event.target.value)),\n                name: \"coordX\",\n                style: {\n                  width: '45%',\n                  marginRight: '5%'\n                },\n                placeholder: \"Coordenada X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: ['address', 'street'],\n              noStyle: true,\n              rules: [{\n                required: true,\n                message: 'Street is required'\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                value: spotCoordY,\n                onBlur: event => setCoordY(parseInt(event.target.value)),\n                name: \"coordY\",\n                style: {\n                  width: '45%'\n                },\n                placeholder: \"Coordenada Y\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NewSpotModal, \"rp4uq+UvyWps9NKoMvanUaINlP4=\");\n\n_c = NewSpotModal;\nexport default NewSpotModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewSpotModal\");","map":{"version":3,"names":["Button","Modal","Form","Input","React","useState","createSpot","axios","require","NewSpotModal","isModalVisible","setIsModalVisible","spotName","setName","spotCoordX","setCoordX","spotCoordY","setCoordY","newSpotCreated","setNewSpotCreated","onFinish","values","console","log","onFinishFailed","errorInfo","showModal","handleOk","handleCancel","borderColor","width","span","remember","required","message","event","target","value","parseInt","marginRight"],"sources":["C:/Users/mgabr/Desktop/front-arcadis/arcadis-challenge/src/components/NewSpot/NewSpotModal.tsx"],"sourcesContent":["import { Button, Modal, Form, Input, DatePicker, Select } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport { createSpot } from '../../Api';\r\nconst axios = require('axios');\r\n\r\nconst NewSpotModal: React.FC = () => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [spotName, setName] = useState('');\r\n  const [spotCoordX, setCoordX] = useState(0);\r\n  const [spotCoordY, setCoordY] = useState(0);\r\n  const [newSpotCreated, setNewSpotCreated ] = useState(false);\r\n\r\n  const onFinish = (values: any) => {\r\n    console.log('Success:', values);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n    createSpot(spotName, spotCoordX, spotCoordY);\r\n    setNewSpotCreated\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"text\" onClick={showModal} style={{borderColor: '#e8e8e8', width: '50%' }}>\r\n        Cadastre um novo ponto\r\n      </Button>\r\n      <Modal title=\"Cadastrar novo ponto\" visible={isModalVisible} onOk={() => handleOk()} onCancel={handleCancel}>\r\n        <Form\r\n          name=\"basic\"\r\n          labelCol={{ span: 8 }}\r\n          wrapperCol={{ span: 16 }}\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Form.Item\r\n            label=\"Nome\"\r\n            name=\"name\"\r\n            rules={[{ required: true, message: 'Please input your username!' }]}\r\n          >\r\n              <Input value={spotName} onBlur={(event) => setName(event.target.value)}/>\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"Coordenadas\"         \r\n            rules={[{ required: true, message: 'Please input your username!' }]}\r\n          >\r\n            <Input.Group compact>\r\n              <Form.Item\r\n                name=\"coordX\"\r\n                noStyle\r\n                rules={[{ required: true, message: 'Province is required' }]}\r\n              >\r\n                <Input  value={spotCoordX} onBlur={(event) => setCoordX\r\n                  (parseInt(event.target.value))} name=\"coordX\" style={{ width: '45%', marginRight: '5%' }} placeholder=\"Coordenada X\" />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name={['address', 'street']}\r\n                noStyle\r\n                rules={[{ required: true, message: 'Street is required' }]}\r\n              >\r\n                <Input value={spotCoordY} onBlur={(event) => setCoordY\r\n                  (parseInt(event.target.value))} name=\"coordY\" style={{ width: '45%' }} placeholder=\"Coordenada Y\" />\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewSpotModal;"],"mappings":"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"},"metadata":{},"sourceType":"module"}